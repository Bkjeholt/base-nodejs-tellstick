# ************************************************************************
# Product    : Home information and control
# Date       : 2017-02-09
# Copyright  : Copyright (C) 2016-2017 Kjeholt Engineering. All rights reserved.
# Contact    : dev@kjeholt.se
# Url        : http://www-dev.kjeholt.se
# Licence    : ---
# -------------------------------------------------------------------------
# File       : base-nodejs-ts/Dockerfile-rpi
# Version    : 0.2.0
# Author     : Bjorn Kjeholt
# *************************************************************************

FROM hypriot/rpi-node:latest

MAINTAINER Bj√∂rn Kjeholt <dev@kjeholt.se>

RUN apt-get update && \
    apt-get install -y vim \
                       wget \
                       gcc \
                       cmake \
                       build-essential \
                       libconfuse-dev \
                       libftdi-dev \
                       help2man && \
    apt-get clean 

# Add Telldus repository
RUN echo "deb-src http://download.telldus.com/debian/ stable main" >> /etc/apt/sources.list.d/telldus.list && \
    wget http://download.telldus.se/debian/telldus-public.key && \
    apt-key add telldus-public.key && \
    rm telldus-public.key

# Install dependencies. Compile and install telldusd
RUN apt-get update && \
    apt-get build-dep -y telldus-core && \
    apt-get --compile source telldus-core && \
    dpkg --install *.deb

# COPY telldusd.service /lib/systemd/system/telldusd.service

RUN mkdir -p /usr/src/app/js && \
    mkdir -p /usr/src/app/script
WORKDIR /usr/src/app

ARG DOCKER_IMAGE_NAME
ARG DOCKER_IMAGE_TAG

ENV DOCKER_BASE_IMAGE_NAME ${DOCKER_IMAGE_NAME:-UnknownName}
ENV DOCKER_BASE_IMAGE_TAG  ${DOCKER_IMAGE_TAG:-UnknownTag}


RUN npm install mqtt@1.7.3 && \
    npm install node-gyp@3.5.0 && \
    npm install telldus@1.1.2

# Load the package.json control file
ONBUILD COPY package.json package.json

# Load configuration file(s)
ONBUILD COPY Configs/tellstick.conf /etc/tellstick.conf

# Bundle app source
ONBUILD COPY js /usr/src/app/js
ONBUILD COPY Scripts /usr/src/app/script
ONBUILD RUN chmod 755 script/* && \
            npm install
            
# Install app dependencies

ONBUILD HEALTHCHECK CMD curl --fail http://127.0.0.1:3000/ || exit 1

ONBUILD CMD script/execute.sh
